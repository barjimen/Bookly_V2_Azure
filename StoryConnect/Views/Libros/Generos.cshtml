@using StoryConnect_V2.Models
@model List<Generos>
<style>
    .overflow-auto::-webkit-scrollbar {
        height: 8px;
    }

    .overflow-auto::-webkit-scrollbar-thumb {
        background-color: rgba(0,0,0,0.2);
        border-radius: 4px;
    }

    .overflow-auto::-webkit-scrollbar-track {
        background: transparent;
    }
</style>

<h1 class="mb-4">📚 Géneros</h1>
<div>
    @foreach (var genero in Model)
    {
        <div class="mb-5">
            <h3 class="mb-3">@genero.Genero.Nombre</h3>

            <div class="d-flex overflow-auto gap-3 pb-2" style="scroll-snap-type: x mandatory;">
                @foreach (var libro in genero.Libros.Take(3))
                {
                    <div class="text-center" style="min-width: 140px; scroll-snap-align: start;">
                        <img src="~/images/books/@libro.ImagenPortada" alt="@libro.Titulo" class="img-fluid rounded shadow-sm mb-2" style="height: 200px; object-fit: cover;" />
                    </div>
                }
                <a asp-action="Genero" asp-controller="Libros" asp-route-id="@genero.Genero.Id">Ver más sobre @genero.Genero.Nombre</a>
            </div>
            <hr />
        </div>
    }
</div>

<!-- Isotope y filtros -->
<script>
    var $grid = $('#libros-grid').isotope({
        itemSelector: '.libro-item',
        layoutMode: 'fitRows',
        getSortData: {
            title: '[data-title]'
        }
    });

    // Filtro por género (desde lista lateral)
    $('.list-group-item').click(function (e) {
        e.preventDefault();
        $('.list-group-item').removeClass('active');
        $(this).addClass('active');

        var filterValue = $(this).attr('data-filter');
        $grid.isotope({ filter: filterValue });
    });

    // Búsqueda rápida
    var qsRegex;
    $('#quicksearch').on('keyup', debounce(function () {
        qsRegex = new RegExp($('#quicksearch').val(), 'gi');
        $grid.isotope({
            filter: function () {
                var $this = $(this);
                var searchMatch = qsRegex ? $this.text().match(qsRegex) : true;
                return searchMatch;
            }
        });
    }, 200));

    function debounce(fn, threshold) {
        var timeout;
        return function debounced() {
            clearTimeout(timeout);
            timeout = setTimeout(fn, threshold || 100);
        };
    }
</script>
